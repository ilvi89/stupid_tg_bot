#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
"""

import os
import sys

def check_requirements():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    try:
        import telegram
        print("‚úÖ python-telegram-bot —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except ImportError:
        print("‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω python-telegram-bot")
        print("–í—ã–ø–æ–ª–Ω–∏—Ç–µ: pip install -r requirements.txt")
        return False
    
    return True

def check_token():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞"""
    token = os.getenv('BOT_TOKEN')
    if not token or token == 'YOUR_BOT_TOKEN_HERE':
        print("‚ùå BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
        print("\n–î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–æ–∫–µ–Ω–∞:")
        print("1. –ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω —É @BotFather –≤ Telegram")
        print("2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è:")
        print("   Linux/Mac: export BOT_TOKEN='–≤–∞—à_—Ç–æ–∫–µ–Ω'")
        print("   Windows: set BOT_TOKEN=–≤–∞—à_—Ç–æ–∫–µ–Ω")
        print("3. –ò–ª–∏ —Å–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env —Å —Å–æ–¥–µ—Ä–∂–∏–º—ã–º:")
        print("   BOT_TOKEN=–≤–∞—à_—Ç–æ–∫–µ–Ω")
        return False
    
    print(f"‚úÖ BOT_TOKEN —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {token[:10]}...")
    return True

def check_files():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤"""
    files_status = []
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª –±–æ—Ç–∞
    if os.path.exists('bot.py'):
        files_status.append("‚úÖ bot.py –Ω–∞–π–¥–µ–Ω")
    else:
        files_status.append("‚ùå bot.py –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    snaop_file = "–°–Ω–∞–û–ü —Å –ø—Ä–æ—á–µ—Ä–∫–∞–º–∏.pdf"
    if os.path.exists(snaop_file):
        files_status.append(f"‚úÖ {snaop_file} –Ω–∞–π–¥–µ–Ω")
    else:
        files_status.append(f"‚ö†Ô∏è {snaop_file} –Ω–µ –Ω–∞–π–¥–µ–Ω (–±—É–¥–µ—Ç –ø—Ä–æ–ø—É—â–µ–Ω)")
    
    consent_file = "–°–æ–≥–ª–∞—Å–∏–µ_–Ω–∞_—Ä–∞—Å—Å—ã–ª–∫—É_–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö_–∏_—Ä–µ–∫–ª–∞–º–Ω—ã—Ö_—Å–æ–æ–±—â–µ–Ω–∏–π_—Å_–ø—Ä–æ—á–µ—Ä–∫–∞–º–∏.pdf"
    if os.path.exists(consent_file):
        files_status.append(f"‚úÖ {consent_file} –Ω–∞–π–¥–µ–Ω")
    else:
        files_status.append(f"‚ö†Ô∏è {consent_file} –Ω–µ –Ω–∞–π–¥–µ–Ω (–±—É–¥–µ—Ç –ø—Ä–æ–ø—É—â–µ–Ω)")
    
    for status in files_status:
        print(status)
    
    return True

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –∑–∞–ø—É—Å–∫–∞"""
    print("ü§ñ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Telegram-–±–æ—Ç–∞ –¥–ª—è –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ –∫–ª—É–±–∞\n")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env –∏–ª–∏ config.env –µ—Å–ª–∏ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    env_files = ['.env', 'config.env']
    for env_file in env_files:
        if os.path.exists(env_file):
            print(f"üìÑ –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ {env_file} —Ñ–∞–π–ª–∞")
            try:
                with open(env_file, 'r', encoding='utf-8') as f:
                    for line in f:
                        if line.strip() and not line.startswith('#'):
                            key, value = line.strip().split('=', 1)
                            os.environ[key] = value
                break
            except UnicodeDecodeError:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –∫–æ–¥–∏—Ä–æ–≤–∫–∏ –≤ —Ñ–∞–π–ª–µ {env_file}, –ø—Ä–æ–±—É–µ–º —Å–ª–µ–¥—É—é—â–∏–π...")
                continue
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
    checks = [
        ("–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ Python", check_requirements),
        ("–¢–æ–∫–µ–Ω –±–æ—Ç–∞", check_token),
        ("–§–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞", check_files)
    ]
    
    all_ok = True
    for name, check_func in checks:
        print(f"\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞: {name}")
        if not check_func():
            all_ok = False
    
    if all_ok:
        print("\nüöÄ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã! –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞...")
        print("–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C\n")
        
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –º–æ–¥—É–ª—å
        try:
            import bot
            bot.main()
        except KeyboardInterrupt:
            print("\nüëã –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        except Exception as e:
            print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")
    else:
        print("\n‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã. –ò—Å–ø—Ä–∞–≤—å—Ç–µ –∏—Ö –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–Ω–æ–≤–∞.")
        sys.exit(1)

if __name__ == '__main__':
    main()