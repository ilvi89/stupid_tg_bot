#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∏–∞–ª–æ–≥–æ–≤–æ–π DSL —Å–∏—Å—Ç–µ–º—ã
"""

import time
from dialog_dsl import DialogBuilder, Validators, InputType, DialogChain, ValidationRule
from typing import Dict, Any


# === –ü–†–û–°–¢–´–ï –ü–†–ò–ú–ï–†–´ ===

def create_simple_greeting_dialog() -> DialogChain:
    """–ü—Ä–æ—Å—Ç–æ–π –¥–∏–∞–ª–æ–≥ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è"""
    return (DialogBuilder("simple_greeting", "–ü—Ä–æ—Å—Ç–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ")
            .start_with("hello")
            
            .add_message(
                step_id="hello",
                message="üëã –ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!",
                next_step="ask_name"
            )
            
            .add_question(
                step_id="ask_name",
                message="–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?",
                input_type=InputType.TEXT,
                validations=[Validators.not_empty()],
                next_step="goodbye"
            )
            
            .add_final(
                step_id="goodbye",
                message="–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è, {ask_name}! üòä"
            )
            
            .build())


# === –ü–†–ò–ú–ï–† –ò–ù–¢–ï–ì–†–ê–¶–ò–ò ===

def register_all_example_dialogs(dialog_engine):
    """–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ –ø—Ä–∏–º–µ—Ä—ã –¥–∏–∞–ª–æ–≥–æ–≤"""
    examples = [
        create_simple_greeting_dialog(),
    ]
    
    for dialog in examples:
        dialog_engine.register_chain(dialog)
    
    print(f"–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ {len(examples)} –ø—Ä–∏–º–µ—Ä–æ–≤ –¥–∏–∞–ª–æ–≥–æ–≤")


if __name__ == "__main__":
    # –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
    from dialog_dsl import init_dialog_engine
    
    engine = init_dialog_engine("example.db")
    register_all_example_dialogs(engine)
    
    print("–ü—Ä–∏–º–µ—Ä—ã –¥–∏–∞–ª–æ–≥–æ–≤ –≥–æ—Ç–æ–≤—ã –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")